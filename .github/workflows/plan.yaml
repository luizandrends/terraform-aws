name: Terragrunt Plan

on:
  pull_request:
    paths:
      - "**/*.hcl"
jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Setup OpenTofu
        run: |
          wget https://github.com/opentofu/opentofu/releases/download/v${{ env.OPEN_TF_VERSION }}/tofu_${{ env.OPEN_TF_VERSION }}_linux_amd64.tar.gz
          tar xf tofu_${{ env.OPEN_TF_VERSION }}_linux_amd64.tar.gz
          rm -rf tofu_${{ env.OPEN_TF_VERSION }}_linux_amd64.tar.gz
          mv tofu /usr/local/bin/tofu
          chmod +x /usr/local/bin/tofu
          tofu -v
        env:
          OPEN_TF_VERSION: 1.7.1
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.58.9
      - name: Terragrunt Plan
        id: plan
        run: |
          echo "Running Terragrunt Plan for modified paths"
          git diff --name-only HEAD^ | grep .tf$ | while read line; do
            DIR=$(dirname "$line")
            terragrunt plan --terragrunt-working-dir "$DIR" > plan.out
            PLAN=$(cat plan.out)
            echo "::set-output name=plan::$PLAN"
            echo "::set-output name=dir::$DIR"
          done
      - name: Comment PR for each modified path
        uses: actions/github-script@v6
        with:
          script: |
            const plan = '${{ steps.plan.outputs.plan }}';
            const dir = '${{ steps.plan.outputs.dir }}';
            const message = `
              ## ðŸš€ Terragrunt Plan Result for ${dir} ðŸš€
              Here is the result of the Terragrunt Plan that was run for your pull request:

              \`\`\`yaml
              ${plan}
              \`\`\`

              Please review the plan output above. If everything looks correct, you can proceed with the merge. If you see anything unexpected, please make sure to fix your changes or discuss with the team.

              Happy coding! ðŸ’»
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
